2023-05-18 19:01:33 - Listando todos as Marcas
2023-05-18 19:01:34 - Listando todos os insumos ativos
2023-05-18 19:02:16 - The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:02:16 - The web application [ROOT] appears to have started a thread named [logback-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.6/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.6/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1170)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:02:19 - The web application [ROOT] appears to have started a thread named [HikariPool-2 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:02:19 - The web application [ROOT] appears to have started a thread named [HikariPool-2 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:02:37 - The web application [ROOT] appears to have started a thread named [HikariPool-3 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:03:17 - The web application [ROOT] appears to have started a thread named [HikariPool-4 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:03:22 - The web application [ROOT] appears to have started a thread named [HikariPool-5 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:03:22 - The web application [ROOT] appears to have started a thread named [HikariPool-5 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:03:26 - The web application [ROOT] appears to have started a thread named [HikariPool-6 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:03:26 - The web application [ROOT] appears to have started a thread named [HikariPool-6 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:03:56 - The web application [ROOT] appears to have started a thread named [HikariPool-7 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:04:05 - The web application [ROOT] appears to have started a thread named [HikariPool-8 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:05:06 - The web application [ROOT] appears to have started a thread named [HikariPool-9 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:05:10 - The web application [ROOT] appears to have started a thread named [HikariPool-10 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:05:10 - The web application [ROOT] appears to have started a thread named [HikariPool-10 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:08:40 - The web application [ROOT] appears to have started a thread named [HikariPool-11 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:09:07 - The web application [ROOT] appears to have started a thread named [HikariPool-12 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:09:23 - The web application [ROOT] appears to have started a thread named [HikariPool-13 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:09:37 - The web application [ROOT] appears to have started a thread named [HikariPool-14 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:10:32 - The web application [ROOT] appears to have started a thread named [HikariPool-15 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:10:36 - The web application [ROOT] appears to have started a thread named [HikariPool-16 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:10:36 - The web application [ROOT] appears to have started a thread named [HikariPool-16 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:10:43 - The web application [ROOT] appears to have started a thread named [HikariPool-17 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:10:48 - Listando todos os insumos ativos
2023-05-18 19:10:50 - Listando todos os insumos ativos
2023-05-18 19:10:54 - Listando todos os insumos ativos
2023-05-18 19:11:33 - Listando todos os insumos ativos
2023-05-18 19:11:59 - The web application [ROOT] appears to have started a thread named [HikariPool-18 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:12:10 - Listando todos os usuarios
2023-05-18 19:12:11 - Listando todos os insumos ativos
2023-05-18 19:12:36 - The web application [ROOT] appears to have started a thread named [HikariPool-19 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:13:08 - The web application [ROOT] appears to have started a thread named [HikariPool-20 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:13:14 - Listando todos os insumos desativados
2023-05-18 19:13:15 - Listando todos os insumos ativos
2023-05-18 19:13:28 - The web application [ROOT] appears to have started a thread named [HikariPool-21 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:13:39 - The web application [ROOT] appears to have started a thread named [HikariPool-22 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:13:41 - Listando todos as Marcas
2023-05-18 19:13:44 - Listando todos os insumos ativos
2023-05-18 19:14:22 - The web application [ROOT] appears to have started a thread named [HikariPool-23 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:14:25 - Listando todos as Marcas
2023-05-18 19:14:28 - Listando todos os insumos ativos
2023-05-18 19:14:28 - Listando todo estoque ativo
2023-05-18 19:14:37 - The web application [ROOT] appears to have started a thread named [HikariPool-24 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:14:41 - The web application [ROOT] appears to have started a thread named [HikariPool-25 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:14:41 - The web application [ROOT] appears to have started a thread named [HikariPool-25 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:14:43 - Listando todos os insumos ativos
2023-05-18 19:14:43 - PASSOU AQUI
2023-05-18 19:14:43 - PASSOU AQUI
2023-05-18 19:14:54 - The web application [ROOT] appears to have started a thread named [HikariPool-26 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:14:56 - Listando todos os insumos ativos
2023-05-18 19:14:56 - PASSOU AQUI
2023-05-18 19:14:56 - PASSOU AQUI 2
2023-05-18 19:14:57 - The web application [ROOT] appears to have started a thread named [HikariPool-27 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:14:57 - The web application [ROOT] appears to have started a thread named [HikariPool-27 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:15:05 - The web application [ROOT] appears to have started a thread named [HikariPool-28 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:15:06 - Listando todos os insumos ativos
2023-05-18 19:15:06 - PASSOU AQUI
2023-05-18 19:15:06 - PASSOU AQUI 2
2023-05-18 19:15:30 - The web application [ROOT] appears to have started a thread named [HikariPool-29 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:15:31 - Listando todos os insumos ativos
2023-05-18 19:15:31 - PASSOU AQUI
2023-05-18 19:15:31 - PASSOU AQUI 20
2023-05-18 19:15:38 - The web application [ROOT] appears to have started a thread named [HikariPool-30 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:16:20 - The web application [ROOT] appears to have started a thread named [HikariPool-31 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:16:34 - Buscando insumos por varios nomes: com.procake.v1.dtos.EstoqueCompletoPesquisaDTO@34c0fb73
2023-05-18 19:16:34 - Insumo null
2023-05-18 19:16:34 - Usuario Insercao null
2023-05-18 19:16:34 - Data inicial null
2023-05-18 19:16:34 - Data final null
2023-05-18 19:16:34 - IF 16
2023-05-18 19:16:34 - Buscando insumos por varios nomes: com.procake.v1.dtos.EstoqueCompletoPesquisaDTO@445c49d8
2023-05-18 19:16:34 - Insumo null
2023-05-18 19:16:34 - Usuario Insercao null
2023-05-18 19:16:34 - Data inicial null
2023-05-18 19:16:34 - Data final null
2023-05-18 19:16:34 - IF 16
2023-05-18 19:16:34 - Buscando insumos por varios nomes: com.procake.v1.dtos.EstoqueCompletoPesquisaDTO@2a001605
2023-05-18 19:16:34 - Insumo null
2023-05-18 19:16:34 - Usuario Insercao null
2023-05-18 19:16:34 - Data inicial null
2023-05-18 19:16:34 - Data final null
2023-05-18 19:16:34 - IF 16
2023-05-18 19:16:34 - Buscando insumos por varios nomes: com.procake.v1.dtos.EstoqueCompletoPesquisaDTO@7e67bda7
2023-05-18 19:16:34 - Insumo null
2023-05-18 19:16:34 - Usuario Insercao null
2023-05-18 19:16:34 - Data inicial null
2023-05-18 19:16:34 - Data final null
2023-05-18 19:16:34 - IF 16
2023-05-18 19:16:35 - Buscando insumos por varios nomes: com.procake.v1.dtos.EstoqueCompletoPesquisaDTO@2111748e
2023-05-18 19:16:35 - Insumo null
2023-05-18 19:16:35 - Usuario Insercao null
2023-05-18 19:16:35 - Data inicial null
2023-05-18 19:16:35 - Data final null
2023-05-18 19:16:35 - IF 16
2023-05-18 19:16:54 - Buscando insumo ativo por nome: f
2023-05-18 19:17:02 - Inserindo novo estoque
2023-05-18 19:17:04 - Listando todos os insumos ativos
2023-05-18 19:17:04 - PASSOU AQUI
2023-05-18 19:17:04 - PASSOU AQUI 2 1
2023-05-18 19:17:04 - PASSOU AQUI 3
2023-05-18 19:17:04 - Listando todo estoque ativo
2023-05-18 19:17:04 - Quantidade = 23.0
2023-05-18 19:17:22 - The web application [ROOT] appears to have started a thread named [HikariPool-32 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:17:25 - The web application [ROOT] appears to have started a thread named [HikariPool-33 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:17:25 - The web application [ROOT] appears to have started a thread named [HikariPool-33 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:17:33 - The web application [ROOT] appears to have started a thread named [HikariPool-34 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:17:36 - The web application [ROOT] appears to have started a thread named [HikariPool-35 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:17:36 - The web application [ROOT] appears to have started a thread named [HikariPool-35 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:17:47 - The web application [ROOT] appears to have started a thread named [HikariPool-36 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:17:55 - The web application [ROOT] appears to have started a thread named [HikariPool-37 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:18:14 - The web application [ROOT] appears to have started a thread named [HikariPool-38 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:18:16 - Listando todos as Marcas
2023-05-18 19:18:17 - Listando todos os insumos ativos
2023-05-18 19:18:17 - PASSOU AQUI
2023-05-18 19:18:17 - PASSOU AQUI 2 1
2023-05-18 19:18:26 - Buscando insumo ativo por nome: fa
2023-05-18 19:18:36 - Inserindo novo estoque
2023-05-18 19:18:39 - Listando todos os insumos ativos
2023-05-18 19:18:39 - PASSOU AQUI
2023-05-18 19:18:39 - PASSOU AQUI 2 2
2023-05-18 19:18:48 - Buscando insumos por varios nomes: com.procake.v1.dtos.EstoqueCompletoPesquisaDTO@266bb525
2023-05-18 19:18:48 - Insumo null
2023-05-18 19:18:48 - Usuario Insercao null
2023-05-18 19:18:48 - Data inicial null
2023-05-18 19:18:48 - Data final null
2023-05-18 19:18:48 - IF 16
2023-05-18 19:19:02 - Listando todos os insumos ativos
2023-05-18 19:19:02 - PASSOU AQUI
2023-05-18 19:19:02 - PASSOU AQUI 2 2
2023-05-18 19:19:42 - Buscando insumos por varios nomes: com.procake.v1.dtos.EstoqueCompletoPesquisaDTO@61b0efad
2023-05-18 19:19:42 - Insumo null
2023-05-18 19:19:42 - Usuario Insercao null
2023-05-18 19:19:42 - Data inicial null
2023-05-18 19:19:42 - Data final null
2023-05-18 19:19:42 - IF 16
2023-05-18 19:19:47 - estorno estoque com o ID: f7ecf6b7-09ae-40d7-b06c-c238ff6f587e
2023-05-18 19:19:49 - Listando todos os insumos ativos
2023-05-18 19:19:49 - PASSOU AQUI
2023-05-18 19:19:49 - PASSOU AQUI 2 1
2023-05-18 19:19:58 - The web application [ROOT] appears to have started a thread named [HikariPool-39 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:20:03 - The web application [ROOT] appears to have started a thread named [HikariPool-40 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:20:03 - The web application [ROOT] appears to have started a thread named [HikariPool-40 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:20:07 - The web application [ROOT] appears to have started a thread named [HikariPool-41 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:20:07 - The web application [ROOT] appears to have started a thread named [HikariPool-41 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:20:10 - The web application [ROOT] appears to have started a thread named [HikariPool-42 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:20:10 - The web application [ROOT] appears to have started a thread named [HikariPool-42 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:21:30 - The web application [ROOT] appears to have started a thread named [HikariPool-43 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:21:36 - The web application [ROOT] appears to have started a thread named [HikariPool-44 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:21:36 - The web application [ROOT] appears to have started a thread named [HikariPool-44 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:21:54 - Listando todos os insumos ativos
2023-05-18 19:21:56 - Listando todos os insumos desativados
2023-05-18 19:21:56 - Listando todos os insumos ativos
2023-05-18 19:21:58 - Buscando insumo por nome: sf
2023-05-18 19:21:59 - Buscando insumo por nome: s
2023-05-18 19:22:00 - Buscando insumo por nome: a
2023-05-18 19:22:28 - The web application [ROOT] appears to have started a thread named [HikariPool-45 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:22:47 - The web application [ROOT] appears to have started a thread named [HikariPool-46 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:23:03 - The web application [ROOT] appears to have started a thread named [HikariPool-47 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:23:10 - The web application [ROOT] appears to have started a thread named [HikariPool-48 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:23:17 - The web application [ROOT] appears to have started a thread named [HikariPool-49 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
2023-05-18 19:23:18 - Buscando insumo por nome: a
2023-05-18 19:23:19 - Buscando insumo por nome: as
2023-05-18 19:23:20 - Buscando insumo por nome: f
2023-05-18 19:23:23 - Listando todos os insumos ativos
2023-05-18 19:23:24 - Atualizando insumo com ID e975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 19:23:24 - Resolved [com.procake.exceptions.OperacaoInvalidaException: Para desativar o insumo é preciso que o estoque dele esteja zerado]
2023-05-18 19:24:02 - Listando todos os insumos ativos
2023-05-18 19:24:08 - Buscando insumos por varios nomes: com.procake.v1.dtos.EstoqueCompletoPesquisaDTO@1305ce84
2023-05-18 19:24:08 - Insumo null
2023-05-18 19:24:08 - Usuario Insercao null
2023-05-18 19:24:08 - Data inicial null
2023-05-18 19:24:08 - Data final null
2023-05-18 19:24:08 - IF 16
2023-05-18 19:24:10 - estorno estoque com o ID: 5742b68e-b592-480f-8f3a-c84bf8c02224
2023-05-18 19:24:11 - Listando todos os insumos ativos
2023-05-18 19:24:27 - Atualizando insumo com ID e975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 19:24:28 - Listando todos os insumos desativados
2023-05-18 19:24:29 - Listando todos os insumos ativos
2023-05-18 19:24:30 - Listando todos os insumos desativados
2023-05-18 19:24:38 - Buscando insumo ativo por nome: fa
2023-05-18 19:24:44 - Listando todos os insumos ativos
2023-05-18 19:24:45 - Listando todos os insumos ativos
2023-05-18 19:24:45 - Listando todos os insumos desativados
2023-05-18 19:24:46 - Atualizando insumo com ID e975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 19:24:48 - Atualizando insumo com ID e975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 19:24:49 - Atualizando insumo com ID e975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 19:24:54 - Buscando insumo ativo por nome: fa
2023-05-18 19:24:58 - Listando todos os insumos ativos
2023-05-18 19:25:01 - Listando todos os Fornecedores
2023-05-18 19:25:04 - Listando todos as Marcas
2023-05-18 19:25:06 - Atualizando marca com ID bcc50cc4-3a6e-483b-8963-e6adf4a98491
2023-05-18 19:25:06 - Atualizando marca com ID bcc50cc4-3a6e-483b-8963-e6adf4a98491
2023-05-18 19:25:13 - Listando todos os insumos ativos
2023-05-18 19:25:15 - Buscando insumo por ID: e975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 19:25:17 - Listando todos os insumos ativos
2023-05-18 19:25:18 - Listando todos as Marcas
2023-05-18 19:25:24 - Listando todos os Fornecedores
2023-05-18 19:26:19 - Buscando insumo ativo por nome: we efsdf
2023-05-18 19:26:45 - Listando todos os insumos ativos
2023-05-18 19:26:46 - Listando todos as Marcas
2023-05-18 19:27:01 - Buscando insumos por varios nomes: com.procake.v1.dtos.EstoqueCompletoPesquisaDTO@14d554f9
2023-05-18 19:27:01 - Insumo null
2023-05-18 19:27:01 - Usuario Insercao null
2023-05-18 19:27:01 - Data inicial null
2023-05-18 19:27:01 - Data final null
2023-05-18 19:27:01 - IF 16
2023-05-18 19:27:02 - Buscando insumos por varios nomes: com.procake.v1.dtos.EstoqueCompletoPesquisaDTO@5a49fde2
2023-05-18 19:27:02 - Insumo null
2023-05-18 19:27:02 - Usuario Insercao null
2023-05-18 19:27:02 - Data inicial null
2023-05-18 19:27:02 - Data final null
2023-05-18 19:27:02 - IF 16
2023-05-18 19:27:03 - Buscando insumos por varios nomes: com.procake.v1.dtos.EstoqueCompletoPesquisaDTO@70435981
2023-05-18 19:27:03 - Insumo null
2023-05-18 19:27:03 - Usuario Insercao null
2023-05-18 19:27:03 - Data inicial null
2023-05-18 19:27:03 - Data final null
2023-05-18 19:27:03 - IF 16
2023-05-18 19:27:03 - Buscando insumos por varios nomes: com.procake.v1.dtos.EstoqueCompletoPesquisaDTO@790d8691
2023-05-18 19:27:03 - Insumo null
2023-05-18 19:27:03 - Usuario Insercao null
2023-05-18 19:27:03 - Data inicial null
2023-05-18 19:27:03 - Data final null
2023-05-18 19:27:03 - IF 16
2023-05-18 19:27:03 - Buscando insumos por varios nomes: com.procake.v1.dtos.EstoqueCompletoPesquisaDTO@20b7a734
2023-05-18 19:27:03 - Insumo null
2023-05-18 19:27:03 - Usuario Insercao null
2023-05-18 19:27:03 - Data inicial null
2023-05-18 19:27:03 - Data final null
2023-05-18 19:27:03 - IF 16
2023-05-18 19:27:03 - Buscando insumos por varios nomes: com.procake.v1.dtos.EstoqueCompletoPesquisaDTO@65246770
2023-05-18 19:27:03 - Insumo null
2023-05-18 19:27:03 - Usuario Insercao null
2023-05-18 19:27:03 - Data inicial null
2023-05-18 19:27:03 - Data final null
2023-05-18 19:27:03 - IF 16
2023-05-18 19:27:06 - Listando todos os insumos ativos
2023-05-18 19:27:11 - Listando todos os usuarios
2023-05-18 19:27:12 - Listando todos os clientes
2023-05-18 19:27:14 - Listando todos os usuarios
2023-05-18 19:27:16 - Listando todos os grupos de acesso
2023-05-18 19:27:16 - Buscando um usuario por ID: c42684a8-ca3d-11ed-afa1-0242ac120002
2023-05-18 19:27:17 - Listando todos os usuarios
2023-05-18 19:27:18 - Listando todos os insumos ativos
2023-05-18 19:54:17 - HikariPool-50 - Thread starvation or clock leap detected (housekeeper delta=9m59s406ms253µs500ns).
2023-05-18 19:55:23 - Listando todo estoque ativo
2023-05-18 19:55:56 - Listando todos os insumos ativos
2023-05-18 19:57:03 - Listando todos os insumos ativos
2023-05-18 19:57:11 - Listando todos os insumos ativos
2023-05-18 19:57:53 - Listando todos os insumos ativos
2023-05-18 19:58:26 - Listando todos os insumos ativos
2023-05-18 19:59:02 - Listando todos os insumos ativos
2023-05-18 19:59:34 - Listando todos os insumos ativos
2023-05-18 20:00:23 - Listando todos os insumos ativos
2023-05-18 20:02:40 - Listando todos os insumos ativos
2023-05-18 20:03:19 - Listando todos os insumos ativos
2023-05-18 20:04:11 - Listando todos os insumos ativos
2023-05-18 20:04:40 - Atualizando insumo com ID e975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:04:41 - Atualizando insumo com ID e975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:05:20 - Listando todos os insumos ativos
2023-05-18 20:06:34 - Listando todos os insumos ativos
2023-05-18 20:06:39 - Listando todos os insumos ativos
2023-05-18 20:08:54 - Listando todos os insumos ativos
2023-05-18 20:15:27 - Listando todos os insumos ativos
2023-05-18 20:15:28 - Listando todo estoque ativo
2023-05-18 20:16:10 - Listando todo estoque ativo
2023-05-18 20:16:30 - Listando todo estoque ativo
2023-05-18 20:17:21 - Listando todo estoque ativo
2023-05-18 20:18:02 - Listando todo estoque ativo
2023-05-18 20:18:19 - Listando todo estoque ativo
2023-05-18 20:18:30 - Listando todo estoque ativo
2023-05-18 20:18:57 - Listando todo estoque ativo
2023-05-18 20:22:13 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:23:05 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:23:55 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:24:06 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:24:34 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:24:36 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:24:40 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:25:17 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:25:23 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:25:28 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:26:32 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:27:18 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:27:22 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:27:44 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:27:56 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:29:06 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:30:07 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:30:08 - Listando todos os insumos ativos
2023-05-18 20:30:10 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:30:53 - Listando todos os usuarios
2023-05-18 20:30:54 - Listando todos os clientes
2023-05-18 20:30:56 - Listando todos as Marcas
2023-05-18 20:30:57 - Listando todos os Fornecedores
2023-05-18 20:31:04 - Listando todos os Fornecedores
2023-05-18 20:31:11 - Listando todos os Fornecedores
2023-05-18 20:31:12 - Listando todos os fornecedores ativos
2023-05-18 20:31:12 - Listando todos os fornecedores desativados
2023-05-18 20:31:14 - Listando todos as Marcas
2023-05-18 20:31:17 - Listando todos os insumos ativos
2023-05-18 20:33:20 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:33:30 - Listando todos os insumos ativos
2023-05-18 20:33:32 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:34:01 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:35:39 - Listando todos os insumos ativos
2023-05-18 20:35:47 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:35:48 - Listando todos os insumos ativos
2023-05-18 20:35:50 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:35:51 - Listando todos os insumos ativos
2023-05-18 20:36:00 - Buscando insumo ativo por nome: f
2023-05-18 20:36:46 - Inserindo novo estoque
2023-05-18 20:36:49 - Listando todos os insumos ativos
2023-05-18 20:36:51 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:37:16 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:38:00 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:38:03 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:39:10 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:42:11 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:42:11 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:44:10 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:46:10 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:46:10 - Buscando insumo por ID: e975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:47:48 - Buscando insumo por ID: e975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:47:48 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:47:59 - Listando todos os insumos ativos
2023-05-18 20:48:00 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:48:00 - Buscando insumo por ID: e975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:49:37 - Listando todos os insumos ativos
2023-05-18 20:49:38 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:49:38 - Buscando insumo por ID: e975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:49:50 - Listando todos os insumos ativos
2023-05-18 20:49:58 - Buscando insumo por ID: e975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:49:58 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:50:24 - Buscando insumo ativo por nome: fa
2023-05-18 20:50:55 - Inserindo novo estoque
2023-05-18 20:50:58 - Listando todos os insumos ativos
2023-05-18 20:51:01 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:51:01 - Buscando insumo por ID: e975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:51:09 - Listando todos os insumos ativos
2023-05-18 20:51:12 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:51:12 - Buscando insumo por ID: e975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:52:59 - Buscando insumo por ID: e975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:52:59 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:53:17 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:53:17 - Buscando insumo por ID: e975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:54:47 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:54:47 - Buscando insumo por ID: e975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:55:01 - Listando todos os insumos ativos
2023-05-18 20:55:18 - Inserindo novo insumo
2023-05-18 20:55:19 - Listando todos os insumos ativos
2023-05-18 20:56:01 - Listando todos os insumos ativos
2023-05-18 20:57:32 - Buscando insumo por ID: 61bd6d2c-fce6-471b-864c-1bde9b38f29c
2023-05-18 20:57:32 - Buscando estoque pelo insumo com o ID61bd6d2c-fce6-471b-864c-1bde9b38f29c
2023-05-18 20:57:40 - Buscando insumo por ID: 61bd6d2c-fce6-471b-864c-1bde9b38f29c
2023-05-18 20:57:40 - Buscando estoque pelo insumo com o ID61bd6d2c-fce6-471b-864c-1bde9b38f29c
2023-05-18 20:57:42 - Listando todos os insumos ativos
2023-05-18 20:57:58 - Listando todos os insumos ativos
2023-05-18 20:58:12 - Buscando insumo por ID: 61bd6d2c-fce6-471b-864c-1bde9b38f29c
2023-05-18 20:58:12 - Buscando estoque pelo insumo com o ID61bd6d2c-fce6-471b-864c-1bde9b38f29c
2023-05-18 20:58:20 - Buscando insumo por ID: 61bd6d2c-fce6-471b-864c-1bde9b38f29c
2023-05-18 20:58:20 - Buscando estoque pelo insumo com o ID61bd6d2c-fce6-471b-864c-1bde9b38f29c
2023-05-18 20:58:23 - Buscando insumo por ID: 61bd6d2c-fce6-471b-864c-1bde9b38f29c
2023-05-18 20:58:23 - Buscando estoque pelo insumo com o ID61bd6d2c-fce6-471b-864c-1bde9b38f29c
2023-05-18 20:58:47 - Buscando insumo por ID: 61bd6d2c-fce6-471b-864c-1bde9b38f29c
2023-05-18 20:58:47 - Buscando estoque pelo insumo com o ID61bd6d2c-fce6-471b-864c-1bde9b38f29c
2023-05-18 20:58:50 - Listando todos os insumos ativos
2023-05-18 20:58:53 - Buscando insumo por ID: 61bd6d2c-fce6-471b-864c-1bde9b38f29c
2023-05-18 20:58:53 - Buscando estoque pelo insumo com o ID61bd6d2c-fce6-471b-864c-1bde9b38f29c
2023-05-18 20:59:08 - Buscando estoque pelo insumo com o ID61bd6d2c-fce6-471b-864c-1bde9b38f29c
2023-05-18 20:59:08 - Buscando insumo por ID: 61bd6d2c-fce6-471b-864c-1bde9b38f29c
2023-05-18 20:59:12 - Listando todos os insumos ativos
2023-05-18 20:59:13 - Buscando insumo por ID: 61bd6d2c-fce6-471b-864c-1bde9b38f29c
2023-05-18 20:59:13 - Buscando estoque pelo insumo com o ID61bd6d2c-fce6-471b-864c-1bde9b38f29c
2023-05-18 20:59:20 - Listando todos os insumos ativos
2023-05-18 20:59:21 - Buscando insumo por ID: e975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:59:21 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:59:23 - Listando todos os insumos ativos
2023-05-18 20:59:24 - Buscando insumo por ID: 61bd6d2c-fce6-471b-864c-1bde9b38f29c
2023-05-18 20:59:24 - Buscando estoque pelo insumo com o ID61bd6d2c-fce6-471b-864c-1bde9b38f29c
2023-05-18 20:59:24 - Listando todos os insumos ativos
2023-05-18 20:59:25 - Buscando insumo por ID: e975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:59:25 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:59:33 - Listando todos os insumos ativos
2023-05-18 20:59:34 - Buscando insumo por ID: e975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:59:34 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 20:59:58 - Listando todos os insumos ativos
2023-05-18 21:00:00 - Buscando insumo por ID: e975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 21:00:00 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 21:02:07 - Listando todos os insumos ativos
2023-05-18 21:04:44 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 21:04:44 - Buscando insumo por ID: e975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 21:05:27 - Listando todos os insumos ativos
2023-05-18 21:05:28 - Buscando insumo por ID: e975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 21:05:28 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 21:06:33 - Listando todos os insumos ativos
2023-05-18 21:06:35 - Buscando insumo por ID: e975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 21:06:35 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 21:07:10 - Buscando estoque com o ID6212a790-ec7d-4022-bc27-0b7d6677a032
2023-05-18 21:07:41 - Listando todos os insumos ativos
2023-05-18 21:07:43 - Buscando insumo por ID: e975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 21:07:43 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 21:07:44 - Buscando estoque com o ID592149b6-58dd-4794-a695-0081b60e0f98
2023-05-18 21:07:55 - Listando todos os insumos ativos
2023-05-18 21:07:56 - Buscando insumo por ID: e975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 21:07:56 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 21:07:58 - Buscando estoque com o ID592149b6-58dd-4794-a695-0081b60e0f98
2023-05-18 21:07:59 - Listando todos os insumos ativos
2023-05-18 21:08:04 - Buscando insumo por ID: e975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 21:08:04 - Buscando estoque pelo insumo com o IDe975b852-e44e-11ed-b5ea-0242ac120002
2023-05-18 21:08:07 - Buscando estoque com o ID592149b6-58dd-4794-a695-0081b60e0f98
2023-05-18 21:08:31 - Buscando estoque com o ID592149b6-58dd-4794-a695-0081b60e0f98
2023-05-18 21:08:52 - Listando todos os insumos ativos
2023-05-18 21:08:54 - Buscando insumo por ID: 61bd6d2c-fce6-471b-864c-1bde9b38f29c
2023-05-18 21:08:54 - Buscando estoque pelo insumo com o ID61bd6d2c-fce6-471b-864c-1bde9b38f29c
2023-05-18 21:08:55 - Listando todos os insumos ativos
2023-05-18 21:09:04 - Buscando insumo ativo por nome: ovo
2023-05-18 21:09:50 - Inserindo novo estoque
2023-05-18 21:09:52 - Listando todos os insumos ativos
2023-05-18 21:09:56 - Buscando insumo por ID: 61bd6d2c-fce6-471b-864c-1bde9b38f29c
2023-05-18 21:09:56 - Buscando estoque pelo insumo com o ID61bd6d2c-fce6-471b-864c-1bde9b38f29c
2023-05-18 21:10:00 - Buscando estoque com o ID21f5a7b8-e6e9-4b15-99ee-a88652bb05d8
2023-05-18 21:12:09 - Listando todos os insumos ativos
2023-05-18 21:13:23 - Listando todos os clientes
2023-05-18 21:13:33 - Buscando cliente por ID: e81699e3-3e15-43aa-9213-0c68ec954118
2023-05-18 21:13:35 - Listando todos os clientes
2023-05-18 21:13:53 - Listando todos os insumos ativos
2023-05-18 21:13:57 - Listando todos as Marcas
2023-05-18 21:14:07 - Listando todos os Fornecedores
2023-05-18 21:14:39 - Listando todos as Marcas
2023-05-18 21:14:40 - Listando todos os Fornecedores
2023-05-18 21:15:31 - Listando todos os usuarios
2023-05-18 21:15:33 - Listando todos os clientes
2023-05-18 21:15:38 - Buscando cliente por ID: e81699e3-3e15-43aa-9213-0c68ec954118
2023-05-18 21:15:40 - Listando todos os clientes
2023-05-18 21:15:41 - Listando todos os usuarios
2023-05-18 21:15:43 - Listando todos os grupos de acesso
2023-05-18 21:15:43 - Buscando um usuario por ID: c42684a8-ca3d-11ed-afa1-0242ac120002
2023-05-18 21:16:04 - Listando todos os usuarios
2023-05-18 21:16:34 - Buscando insumos por varios nomes: com.procake.v1.dtos.EstoqueCompletoPesquisaDTO@6b269cf6
2023-05-18 21:16:34 - Insumo null
2023-05-18 21:16:34 - Usuario Insercao ADM
2023-05-18 21:16:34 - Data inicial null
2023-05-18 21:16:34 - Data final null
2023-05-18 21:16:34 - IF 15
2023-05-18 21:20:25 - estorno estoque com o ID: 592149b6-58dd-4794-a695-0081b60e0f98
2023-05-18 21:20:37 - Listando todos os usuarios
2023-05-18 21:25:03 - The web application [ROOT] appears to have started a thread named [HikariPool-50 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
